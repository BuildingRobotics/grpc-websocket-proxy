syntax = "proto3";
package echoserver;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// Disables some golang/protobuf behaviour
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.goproto_enum_stringer_all) = false;
option (gogoproto.gostring_all) = false;

// Enable gogo/protobuf features
option (gogoproto.populate_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.stringer_all) =  true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.enum_stringer_all) = true;

message EchoRequest {
  string message = 1;
}

message EchoResponse {
  string message = 1;
  google.protobuf.Timestamp timestamp = 2 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false
  ];
}

message Heartbeat {
  enum Status {
    UNKNOWN = 0;
    OK = 1;
  }
  Status status = 1;
}

message Empty {}

service EchoService {
  rpc Echo(stream EchoRequest) returns (stream EchoResponse) {
    option (google.api.http) = {post: "/echo", body: "*"};
  }
  rpc Stream(Empty) returns (stream EchoResponse) {
    option (google.api.http) = {get: "/echo"};
  }
  rpc Heartbeats(stream Empty) returns (stream Heartbeat) {
    option (google.api.http) = {post: "/heartbeats"};
  }
}


service Messaging {
  rpc UpdateMessage(Message) returns (Message) {
    option (google.api.http) = {
      put: "/v1/messages/{message_id}"
      body: "*"
    };
  }
}
message Message {
  string message_id = 1;
  string text = 2;
}
